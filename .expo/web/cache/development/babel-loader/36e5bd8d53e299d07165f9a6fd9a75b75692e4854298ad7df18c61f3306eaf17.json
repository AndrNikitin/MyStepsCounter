{"ast":null,"code":"import _asyncToGenerator from \"@babel/runtime/helpers/asyncToGenerator\";\nimport _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useEffect } from \"react\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Button from \"react-native-web/dist/exports/Button\";\nimport * as Location from \"expo-location\";\nimport * as TaskManager from \"expo-task-manager\";\nimport * as Pedometer from \"expo-sensors/build/Pedometer\";\nimport * as Notifications from \"expo-notifications\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-runtime\";\nvar LOCATION_TASK_NAME = \"background-location-task\";\nvar PEDOMETER_TASK_NAME = \"background-pedometer-task\";\nvar NOTIFICATION_TASK_NAME = \"background-notification-task\";\nexport default function App() {\n  var _useState = useState(false),\n    _useState2 = _slicedToArray(_useState, 2),\n    isTracking = _useState2[0],\n    setIsTracking = _useState2[1];\n  var _useState3 = useState(null),\n    _useState4 = _slicedToArray(_useState3, 2),\n    pedometerData = _useState4[0],\n    setPedometerData = _useState4[1];\n  var _useState5 = useState(null),\n    _useState6 = _slicedToArray(_useState5, 2),\n    locationData = _useState6[0],\n    setLocationData = _useState6[1];\n  useEffect(function () {\n    _asyncToGenerator(function* () {\n      try {\n        var _yield$Location$reque = yield Location.requestForegroundPermissionsAsync(),\n          status = _yield$Location$reque.status;\n        var _yield$Location$reque2 = yield Location.requestBackgroundPermissionsAsync(),\n          backgroundStatus = _yield$Location$reque2.status;\n        if (status === \"granted\" && backgroundStatus === \"granted\") {\n          setIsTracking(true);\n          yield Location.startLocationUpdatesAsync(LOCATION_TASK_NAME, {\n            accuracy: Location.Accuracy.High,\n            timeInterval: 60000,\n            distanceInterval: 0,\n            showsBackgroundLocationIndicator: true\n          });\n          var _yield$Pedometer$getS = yield Pedometer.getStepCountAsync(),\n            steps = _yield$Pedometer$getS.steps;\n          setPedometerData(steps);\n          yield TaskManager.registerTaskAsync(PEDOMETER_TASK_NAME, {\n            taskName: PEDOMETER_TASK_NAME,\n            taskType: TaskManager.TaskType.INTERVAL,\n            interval: 60000,\n            options: {\n              startImmediately: true\n            }\n          });\n        } else {\n          setIsTracking(false);\n        }\n        var _locationData = yield AsyncStorage.getItem(\"locationData\");\n        setLocationData(_locationData ? JSON.parse(_locationData) : null);\n        var _pedometerData = yield AsyncStorage.getItem(\"pedometerData\");\n        setPedometerData(_pedometerData ? JSON.parse(_pedometerData) : null);\n      } catch (error) {\n        console.log(`Ошибка при получении данных: ${error}`);\n      }\n    })();\n  }, []);\n  var clearData = function () {\n    var _ref2 = _asyncToGenerator(function* () {\n      try {\n        yield AsyncStorage.removeItem(\"locationData\");\n        yield AsyncStorage.removeItem(\"pedometerData\");\n        setPedometerData(null);\n        setLocationData(null);\n      } catch (error) {\n        console.log(`Ошибка при очистке данных: ${error}`);\n      }\n    });\n    return function clearData() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n  return _jsx(View, {\n    style: {\n      flex: 1,\n      justifyContent: \"center\",\n      alignItems: \"center\"\n    },\n    children: isTracking ? _jsxs(_Fragment, {\n      children: [_jsxs(Text, {\n        children: [\"Steps: \", pedometerData]\n      }), _jsxs(Text, {\n        children: [\"Location: \", JSON.stringify(locationData)]\n      }), _jsx(Button, {\n        title: \"Clear\",\n        onPress: clearData\n      })]\n    }) : _jsx(Text, {\n      children: \"\\u041D\\u0435\\u0442 \\u0434\\u0430\\u043D\\u043D\\u044B\\u0445 \\u0434\\u043B\\u044F \\u0440\\u0430\\u0431\\u043E\\u0442\\u044B\"\n    })\n  });\n}\nTaskManager.defineTask(LOCATION_TASK_NAME, function () {\n  var _ref4 = _asyncToGenerator(function* (_ref3) {\n    var data = _ref3.data,\n      error = _ref3.error;\n    if (error) {\n      console.log(`Ошибка при обработке локации: ${error}`);\n      return;\n    }\n    if (data) {\n      var locations = data.locations;\n      try {\n        yield AsyncStorage.setItem(\"locationData\", JSON.stringify(locations));\n      } catch (error) {\n        console.log(`Ошибка при сохранении локации: ${error}`);\n      }\n    }\n  });\n  return function (_x) {\n    return _ref4.apply(this, arguments);\n  };\n}());\nTaskManager.defineTask(PEDOMETER_TASK_NAME, function () {\n  var _ref6 = _asyncToGenerator(function* (_ref5) {\n    var data = _ref5.data,\n      error = _ref5.error;\n    if (error) {\n      console.log(`Ошибка при обработке педометра: ${error}`);\n      return;\n    }\n    if (data) {\n      var _yield$Pedometer$getS2 = yield Pedometer.getStepCountAsync(),\n        steps = _yield$Pedometer$getS2.steps;\n      try {\n        yield AsyncStorage.setItem(\"pedometerData\", JSON.stringify(steps));\n      } catch (error) {\n        console.log(`Ошибка при сохранении педометра: ${error}`);\n      }\n    }\n  });\n  return function (_x2) {\n    return _ref6.apply(this, arguments);\n  };\n}());\nTaskManager.defineTask(NOTIFICATION_TASK_NAME, _asyncToGenerator(function* () {\n  var _yield$Pedometer$getS3 = yield Pedometer.getStepCountAsync(),\n    steps = _yield$Pedometer$getS3.steps;\n  var location = yield Location.getLastKnownPositionAsync();\n  Notifications.scheduleNotificationAsync({\n    content: {\n      title: \"Step Counter Update\",\n      body: `Steps: ${steps}, Location: ${JSON.stringify(location)}`\n    },\n    trigger: null\n  });\n}));\n_asyncToGenerator(function* () {\n  try {\n    yield TaskManager.registerTaskAsync(NOTIFICATION_TASK_NAME, {\n      taskName: NOTIFICATION_TASK_NAME,\n      taskType: TaskManager.TaskType.PERIODIC,\n      interval: 60000,\n      options: {\n        startImmediately: true\n      }\n    });\n  } catch (error) {\n    console.log(`Ошибка при регистрации задачи уведомлений: ${error}`);\n  }\n})();","map":{"version":3,"names":["React","useState","useEffect","Text","View","Button","Location","TaskManager","Pedometer","Notifications","AsyncStorage","jsxs","_jsxs","jsx","_jsx","Fragment","_Fragment","LOCATION_TASK_NAME","PEDOMETER_TASK_NAME","NOTIFICATION_TASK_NAME","App","_useState","_useState2","_slicedToArray","isTracking","setIsTracking","_useState3","_useState4","pedometerData","setPedometerData","_useState5","_useState6","locationData","setLocationData","_asyncToGenerator","_yield$Location$reque","requestForegroundPermissionsAsync","status","_yield$Location$reque2","requestBackgroundPermissionsAsync","backgroundStatus","startLocationUpdatesAsync","accuracy","Accuracy","High","timeInterval","distanceInterval","showsBackgroundLocationIndicator","_yield$Pedometer$getS","getStepCountAsync","steps","registerTaskAsync","taskName","taskType","TaskType","INTERVAL","interval","options","startImmediately","getItem","JSON","parse","error","console","log","clearData","_ref2","removeItem","apply","arguments","style","flex","justifyContent","alignItems","children","stringify","title","onPress","defineTask","_ref4","_ref3","data","locations","setItem","_x","_ref6","_ref5","_yield$Pedometer$getS2","_x2","_yield$Pedometer$getS3","location","getLastKnownPositionAsync","scheduleNotificationAsync","content","body","trigger","PERIODIC"],"sources":["/Users/adam/Documents/GitHub/MyStepsCounter/App.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\nimport { Text, View, Button } from \"react-native\";\nimport * as Location from \"expo-location\";\nimport * as TaskManager from \"expo-task-manager\";\nimport * as Pedometer from \"expo-sensors/build/Pedometer\";\nimport * as Notifications from \"expo-notifications\";\nimport AsyncStorage from \"@react-native-async-storage/async-storage\";\n\nconst LOCATION_TASK_NAME = \"background-location-task\";\nconst PEDOMETER_TASK_NAME = \"background-pedometer-task\";\nconst NOTIFICATION_TASK_NAME = \"background-notification-task\";\n\nexport default function App() {\n  const [isTracking, setIsTracking] = useState(false);\n  const [pedometerData, setPedometerData] = useState(null);\n  const [locationData, setLocationData] = useState(null);\n\n  useEffect(() => {\n    (async () => {\n      try {\n        const { status } = await Location.requestForegroundPermissionsAsync();\n        const { status: backgroundStatus } =\n          await Location.requestBackgroundPermissionsAsync();\n        if (status === \"granted\" && backgroundStatus === \"granted\") {\n          setIsTracking(true);\n          await Location.startLocationUpdatesAsync(LOCATION_TASK_NAME, {\n            accuracy: Location.Accuracy.High,\n            timeInterval: 60000,\n            distanceInterval: 0,\n            showsBackgroundLocationIndicator: true,\n          });\n          const { steps } = await Pedometer.getStepCountAsync();\n          setPedometerData(steps);\n          await TaskManager.registerTaskAsync(PEDOMETER_TASK_NAME, {\n            taskName: PEDOMETER_TASK_NAME,\n            taskType: TaskManager.TaskType.INTERVAL,\n            interval: 60000,\n            options: {\n              startImmediately: true,\n            },\n          });\n        } else {\n          setIsTracking(false);\n        }\n\n        const locationData = await AsyncStorage.getItem(\"locationData\");\n        setLocationData(locationData ? JSON.parse(locationData) : null);\n\n        const pedometerData = await AsyncStorage.getItem(\"pedometerData\");\n        setPedometerData(pedometerData ? JSON.parse(pedometerData) : null);\n      } catch (error) {\n        console.log(`Ошибка при получении данных: ${error}`);\n      }\n    })();\n  }, []);\n\n  const clearData = async () => {\n    try {\n      await AsyncStorage.removeItem(\"locationData\");\n      await AsyncStorage.removeItem(\"pedometerData\");\n      setPedometerData(null);\n      setLocationData(null);\n    } catch (error) {\n      console.log(`Ошибка при очистке данных: ${error}`);\n    }\n  };\n\n  return (\n    <View style={{ flex: 1, justifyContent: \"center\", alignItems: \"center\" }}>\n      {isTracking ? (\n        <>\n          <Text>Steps: {pedometerData}</Text>\n          <Text>Location: {JSON.stringify(locationData)}</Text>\n          <Button title=\"Clear\" onPress={clearData} />\n        </>\n      ) : (\n        <Text>Нет данных для работы</Text>\n      )}\n    </View>\n  );\n}\n\nTaskManager.defineTask(LOCATION_TASK_NAME, async ({ data, error }) => {\n  if (error) {\n    console.log(`Ошибка при обработке локации: ${error}`);\n    return;\n  }\n  if (data) {\n    const { locations } = data;\n    try {\n      await AsyncStorage.setItem(\"locationData\", JSON.stringify(locations));\n    } catch (error) {\n      console.log(`Ошибка при сохранении локации: ${error}`);\n    }\n  }\n});\n\nTaskManager.defineTask(PEDOMETER_TASK_NAME, async ({ data, error }) => {\n  if (error) {\n    console.log(`Ошибка при обработке педометра: ${error}`);\n    return;\n  }\n  if (data) {\n    const { steps } = await Pedometer.getStepCountAsync();\n    try {\n      await AsyncStorage.setItem(\"pedometerData\", JSON.stringify(steps));\n    } catch (error) {\n      console.log(`Ошибка при сохранении педометра: ${error}`);\n    }\n  }\n});\n\nTaskManager.defineTask(NOTIFICATION_TASK_NAME, async () => {\n  const { steps } = await Pedometer.getStepCountAsync();\n  const location = await Location.getLastKnownPositionAsync();\n  Notifications.scheduleNotificationAsync({\n    content: {\n      title: \"Step Counter Update\",\n      body: `Steps: ${steps}, Location: ${JSON.stringify(location)}`,\n    },\n    trigger: null,\n  });\n});\n\n(async () => {\n  try {\n    await TaskManager.registerTaskAsync(NOTIFICATION_TASK_NAME, {\n      taskName: NOTIFICATION_TASK_NAME,\n      taskType: TaskManager.TaskType.PERIODIC,\n      interval: 60000,\n      options: {\n        startImmediately: true,\n      },\n    });\n  } catch (error) {\n    console.log(`Ошибка при регистрации задачи уведомлений: ${error}`);\n  }\n})();\n"],"mappings":"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"},"metadata":{},"sourceType":"module","externalDependencies":[]}